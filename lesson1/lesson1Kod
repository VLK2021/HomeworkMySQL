show databases;

create database db_my_first;

use db_my_first;
show tables;

create table users(
id int not null auto_increment,
name varchar(20) not null,
age int not null,
gender varchar(6) not null,
primary key (id)
);

select * from users;

insert into users values(null, 'pavlo', 42, 'male');
insert into users values(null, 'anya', 12, 'famale');

select id, name, gender from users;

select * from users where name='Artem';
select * from users where name!='Artem';
select * from users where name<>'Artem';

 select * from users where name like '%a';
 select * from users where name like '%ta%';
 select * from users where name like '_a%';

 select * from users where age between 20 and 30;
  select * from users where age>=20 and age<=30;
  select * from users where age between 20 and 30 or name='ivan';

  select * from users where age in (20,30,17,25);

  select * from users where length(name)>5;

  select * from users order by age asc;
  select * from users order by age desc;
  select * from users order by name desc;

 select * from users limit 2;
 select * from users limit 2 offset 2;

 update cars set model='tavria' where year=2020 limit 10;


select * from users order by age desc limit 1;

//агрегатки: min, max, avg, count, sum, distinct//////////////////////////
select min(age) as min_age from users;
 select max(age) as max_age from users;

 select distinct model from cars;

 select max(age), gender as max_age from users group by gender;
 select count(id), gender as count from users group by gender;
 select avg(age), gender as count from users group by gender;

 select sum(id) from users;
 select sum(age) from users;
 ///////////////////////////////////////////////////////////////

 update users set name='ananas' where id=3;
  delete from users where id=3;

=======================================================================================================
-- найти все машины старше 2000 г
select * from cars where year<2000;

-- найти все машины младше 2015 г
select * from cars where year>2015;

-- найти все машины 2008, 2009, 2010 годов
select * from cars where year in(2008,2009,2010);

-- найти все машины не с этих годов 2008, 2009, 2010 годов
select * from cars where year!=2008 and year!=2009 and year!=2010;

-- найти все машины год которых совпадает с ценой
select * from cars where year=price;

-- найти все машины bmw старше 2014 года
select * from cars where model='bmw' and year<2014;

-- найти все машины audi младше 2014 года
select * from cars where model='audi' and year>2014;

-- найти первые 5 машин
select * from cars limit 5;

-- найти последние 5 машин
select * from cars order by id desc limit 5;

-- найти среднее арифметическое цен машин модели KIA
select avg(price), model from cars where model='toyota';

-- найти среднее арифметическое цен каждой машины
select avg(price), model from cars group by model;

-- посчитать количество каждой марки машин
select count(*), model from cars group by model;

-- найти марку машины количество которых больше всего
select count(*) as count,model from cars group by model order by count desc limit 1;

-- найти все машины в модели которых вторая и предпоследняя буква "а"
select * from cars where model like '_a%a_' ;

-- найти все машины модели которых больше 8 символов
select * from cars where length(model)>8;

-- ***найти машины цена которых больше чем цена среднего арифметического всех машин
select * from cars where price > (select avg(price) from cars);

